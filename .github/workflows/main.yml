name: Notify Upcoming Due Dates

on:
  workflow_dispatch:
    # schedule:
    #   - cron: '*/5 12-23 * * *' # Runs every 5 minutes from 12:00 to 23:59 UTC

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Debug JSON Response
        run: |
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/Parsonious/CiQ-Training-Test/issues

      - name: Fetch issues with due dates
        id: fetch_issues
        run: |
          issues=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/Parsonious/CiQ-Training-Test/issues \
          | jq --arg current_time "$(date -u +%s)" \
          '.[] | select(.milestone != null and .milestone.due_on != null and ((.milestone.due_on | fromdateiso8601) <= ($current_time | tonumber + 86400) and (.milestone.due_on | fromdateiso8601) > ($current_time | tonumber)))' \
          | jq -sR 'split("\n") | map(gsub("\""; "\\\"")) | join("\\n")')
        
          # Export issues to environment variable
          echo "issues='$issues'" >> $GITHUB_ENV
                
          # Debug the fetched issues
          echo "Fetched issues: $issues"

      - name: Debug fetched issues
        run: echo "${{ env.issues }}"
      
      - name: Send Teams notification
        if: success() && env.issues != '[]'
        run: |
          issues="${{ env.issues }}"
          if [ -z "$issues" ] || [ "$issues" = "[]" ]; then
            echo "No issues to notify."
            exit 0
          fi
          payload=$(echo "$issues" | jq -n --argjson issues "$issues" '{
            "@type": "MessageCard",
            "@context": "https://schema.org/extensions",
            "summary": "Upcoming Due Dates",
            "themeColor": "0078D7",
            "sections": [{
              "activityTitle": "The following issues are due tomorrow:",
              "text": ($issues | map("Title: \(.title)\nAssignees: \(.assignees | join(\", \"))\nLabels: \(.labels | join(\", \"))\nURL: \(.html_url)") | join("\n\n"))
            }]
          }')
          echo "$payload" | curl -H "Content-Type: application/json" -d @- "${{ secrets.CIQ_TEST_TEAMS_IN_WEBHOOK }}"

