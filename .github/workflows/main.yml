name: Notify Upcoming Due Dates

on:
  schedule:
    - cron: '*/5 12-23 * * *' # Runs every 5 minutes from 12:00 to 23:59 UTC

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Fetch issues with due dates
        id: fetch_issues
        run: |
          issues=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/Parsonious/CiQ-Training-Test/issues \
          | jq --argjson current_time "$(date +%s)" \
          '[.[] | select(.milestone.due_on != null and (.milestone.due_on | fromdateiso8601) == (($current_time + 86400) | tostring))] | .[] | {title: .title, body: .body, url: .html_url, assignees: [.assignees[].login], labels: [.labels[].name], milestone: .milestone.title}')



      - name: Send Teams notification
        if: success()
        run: |
          issues="${{ steps.fetch_issues.outputs.issues }}"
          payload=$(jq -n --argjson issues "$issues" '{
            "@type": "MessageCard",
            "@context": "https://schema.org/extensions",
            "summary": "Upcoming Due Dates",
            "themeColor": "0078D7",
            "sections": [{
              "activityTitle": "The following issues are due tomorrow:",
              "text": ($issues | map("Title: \(.title)\nAssignees: \(.assignees | join(\", \"))\nLabels: \(.labels | join(\", \"))") | join("\n\n"))
            }]
          }')
          curl -H "Content-Type: application/json" -d "$payload" "${{ secrets.CIQ_TEST_TEAMS_IN_WEBHOOK }}"
      
                curl -H "Content-Type: application/json" -d "$payload" ${{ secrets.CIQ_TEST_TEAMS_IN_WEBHOOK }}
